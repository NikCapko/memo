[versions]
#region AppConfig
compileSdk = "34"
buildToolsVersion = "34.0.0"
minSdk = "21"
targetSdk = "32"

applicationId = "com.nikcapko.memo"
versionCode = "110"
versionName = "1.1.0"
#endregion

#region Gradle
gradle = "8.5.0"
agp = "8.5.0" # https://developer.android.com/reference/tools/gradle-api
javaxInject = "1"
kotlin = "2.0.0"
hilt = "2.49"
#endregion

# дефолтное значение у версии любого gradle проекта, используеми его,
# так как версии у convention плагинов не будут меняться
convention = "unspecified"

#region Tests
junit = "4.13.2"
jupiter = "5.9.3"
androidxJunit = "1.1.5"
espresso = "3.5.1"
assertj = "3.23.1"
mockk = "1.13.5"
#endregion

coreKtx = "1.13.0"
constraintLayout = "2.1.4"
recyclerview = "1.3.2"
material = "1.12.0"
fragment = "1.6.2"
androidx-core-testing = "2.2.0"

retrofit = "2.9.0"
okhttp = "4.12.0"

room = "2.6.1"

coroutines = "1.8.0"
viewbindingpropertydelegate = "1.5.6"
rxBinding = "2.2.0"
lottie = "6.3.0"
sdp = "1.0.6"
cicerone = "6.6"
lifecycle = "2.7.0"
lifecycleExtensions = "2.2.0"

compose-bom = "2024.06.00" # https://developer.android.com/jetpack/compose/bom/bom-mapping

ksp = "2.0.0-1.0.22"
detekt = "1.23.6"

kotest = "5.9.1"
coreKtxVersion = "1.13.1"

[libraries]
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javaxInject" }
plugin-gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
plugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-hilt = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }

test-junit = { module = "junit:junit", version.ref = "junit" }
test-junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jupiter" }
test-junit-ext = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxJunit" }
test-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
test-assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
test-mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
test-kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
test-androidx-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidx-core-testing" }
test-kotest-runner = {group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotest"}
test-kotest-assertions = {group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotest"}

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }

androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
androidx-material = { module = "com.google.android.material:material", version.ref = "material" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtxVersion" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

room = { module = "androidx.room:room-runtime", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }

hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt" }

viewbindingpropertydelegate = { module = "com.github.kirich1409:viewbindingpropertydelegate-noreflection", version.ref = "viewbindingpropertydelegate" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

rxbinding = { module = "com.jakewharton.rxbinding2:rxbinding", version.ref = "rxBinding" }

lottie = { module = "com.airbnb.android:lottie", version.ref = "lottie" }
lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie" }

sdp = { module = "com.intuit.sdp:sdp-android", version.ref = "sdp" }

cicerone = { module = "com.github.terrakok:cicerone", version.ref = "cicerone" }

lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "lifecycleExtensions" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }

compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom" }
compose-animation = { module = "androidx.compose.animation:animation" }
compose-animation-core = { module = "androidx.compose.animation:animation-core" }
compose-animation-graphics = { module = "androidx.compose.animation:animation-graphics" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout" }
compose-material = { module = "androidx.compose.material:material" }
compose-material-icons-core = { module = "androidx.compose.material:material-icons-core" }
compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
compose-material-ripple = { module = "androidx.compose.material:material-ripple" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata" }
compose-runtime-saveable = { module = "androidx.compose.runtime:runtime-saveable" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-android = { module = "androidx.compose.ui:ui-android" }
compose-ui-geometry = { module = "androidx.compose.ui:ui-geometry" }
compose-ui-graphics = { module = "androidx.compose.ui:ui-graphics" }
compose-ui-test = { module = "androidx.compose.ui:ui-test" }
compose-ui-test-font = { module = "androidx.compose.ui:ui-test-font" }
compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
compose-ui-text = { module = "androidx.compose.ui:ui-text" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-data = { module = "androidx.compose.ui:ui-tooling-data" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
compose-ui-tooling-preview-android = { module = "androidx.compose.ui:ui-tooling-preview-android" }
compose-ui-unit = { module = "androidx.compose.ui:ui-unit" }
compose-ui-util = { module = "androidx.compose.ui:ui-util" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

memo-kotlin-jvm-library = { id = "memo-kotlin-jvm-library", version.ref = "convention" }
memo-android-library = { id = "memo-android-library", version.ref = "convention" }
memo-android-application = { id = "memo-android-application", version.ref = "convention" }
